// Generated by view binder compiler. Do not edit!
package com.google.mediapipe.examples.gesturerecognizer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.mediapipe.examples.gesturerecognizer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLightgestureBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView launchremind;

  @NonNull
  public final TextView lightText;

  @NonNull
  public final CardView lightUpCard;

  @NonNull
  public final TextView lightgesturetitle;

  @NonNull
  public final ImageView lightimg;

  @NonNull
  public final CardView togglelightcard;

  private FragmentLightgestureBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView launchremind, @NonNull TextView lightText, @NonNull CardView lightUpCard,
      @NonNull TextView lightgesturetitle, @NonNull ImageView lightimg,
      @NonNull CardView togglelightcard) {
    this.rootView = rootView;
    this.launchremind = launchremind;
    this.lightText = lightText;
    this.lightUpCard = lightUpCard;
    this.lightgesturetitle = lightgesturetitle;
    this.lightimg = lightimg;
    this.togglelightcard = togglelightcard;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLightgestureBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLightgestureBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_lightgesture, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLightgestureBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.launchremind;
      TextView launchremind = ViewBindings.findChildViewById(rootView, id);
      if (launchremind == null) {
        break missingId;
      }

      id = R.id.lightText;
      TextView lightText = ViewBindings.findChildViewById(rootView, id);
      if (lightText == null) {
        break missingId;
      }

      id = R.id.light_up_card;
      CardView lightUpCard = ViewBindings.findChildViewById(rootView, id);
      if (lightUpCard == null) {
        break missingId;
      }

      id = R.id.lightgesturetitle;
      TextView lightgesturetitle = ViewBindings.findChildViewById(rootView, id);
      if (lightgesturetitle == null) {
        break missingId;
      }

      id = R.id.lightimg;
      ImageView lightimg = ViewBindings.findChildViewById(rootView, id);
      if (lightimg == null) {
        break missingId;
      }

      id = R.id.togglelightcard;
      CardView togglelightcard = ViewBindings.findChildViewById(rootView, id);
      if (togglelightcard == null) {
        break missingId;
      }

      return new FragmentLightgestureBinding((ConstraintLayout) rootView, launchremind, lightText,
          lightUpCard, lightgesturetitle, lightimg, togglelightcard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
